{"version":3,"file":"static/js/3583.54d05da6.chunk.js","mappings":"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","sources":["components/StructureChart.tsx"],"sourcesContent":["import { useEffect, useRef, useState, memo } from 'react';\r\nimport { structureLayer } from '../layers';\r\nimport { view } from '../Scene';\r\nimport FeatureFilter from '@arcgis/core/layers/support/FeatureFilter';\r\nimport Query from '@arcgis/core/rest/support/Query';\r\nimport * as am5 from '@amcharts/amcharts5';\r\nimport * as am5xy from '@amcharts/amcharts5/xy';\r\nimport * as am5percent from '@amcharts/amcharts5/percent';\r\nimport am5themes_Animated from '@amcharts/amcharts5/themes/Animated';\r\nimport am5themes_Responsive from '@amcharts/amcharts5/themes/Responsive';\r\nimport {\r\n  generateStrucNumber,\r\n  generateStructureData,\r\n  thousands_separators,\r\n  statusStructureChartQuery,\r\n} from '../Query';\r\n\r\n// Dispose function\r\nfunction maybeDisposeRoot(divId: any) {\r\n  am5.array.each(am5.registry.rootElements, function (root) {\r\n    if (root.dom.id === divId) {\r\n      root.dispose();\r\n    }\r\n  });\r\n}\r\n\r\n/// Draw chart\r\nconst StructureChart = memo(({ municipal, barangay }: any) => {\r\n  // 1. Structure\r\n  const pieSeriesRef = useRef<unknown | any | undefined>({});\r\n  const legendRef = useRef<unknown | any | undefined>({});\r\n  const chartRef = useRef<unknown | any | undefined>({});\r\n  const [structureData, setStructureData] = useState([\r\n    {\r\n      category: String,\r\n      value: Number,\r\n      sliceSettings: {\r\n        fill: am5.color('#00c5ff'),\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const chartID = 'structure-chart';\r\n  const [structureNumber, setStructureNumber] = useState([]);\r\n\r\n  // Query\r\n  const queryMunicipality = \"Municipality = '\" + municipal + \"'\";\r\n  const queryBarangay = \"Barangay = '\" + barangay + \"'\";\r\n  const queryMunicipalBarangay = queryMunicipality + ' AND ' + queryBarangay;\r\n\r\n  if (!municipal) {\r\n    structureLayer.definitionExpression = '1=1';\r\n  } else if (municipal && !barangay) {\r\n    structureLayer.definitionExpression = queryMunicipality;\r\n  } else {\r\n    structureLayer.definitionExpression = queryMunicipalBarangay;\r\n  }\r\n\r\n  useEffect(() => {\r\n    generateStructureData().then((result: any) => {\r\n      setStructureData(result);\r\n    });\r\n\r\n    // Structure Number\r\n    generateStrucNumber().then((response: any) => {\r\n      setStructureNumber(response);\r\n    });\r\n  }, [municipal, barangay]);\r\n\r\n  useEffect(() => {\r\n    // Dispose previously created root element\r\n\r\n    maybeDisposeRoot(chartID);\r\n\r\n    var root = am5.Root.new(chartID);\r\n    root.container.children.clear();\r\n    root._logo?.dispose();\r\n\r\n    // Set themesf\r\n    // https://www.amcharts.com/docs/v5/concepts/themes/\r\n    root.setThemes([am5themes_Animated.new(root), am5themes_Responsive.new(root)]);\r\n\r\n    // Create chart\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\r\n    var chart = root.container.children.push(\r\n      am5percent.PieChart.new(root, {\r\n        //centerY: am5.percent(-2), //-10\r\n        y: am5.percent(-25), // space between pie chart and total lots\r\n        layout: root.horizontalLayout,\r\n      }),\r\n    );\r\n    chartRef.current = chart;\r\n\r\n    // Create series\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\r\n    var pieSeries = chart.series.push(\r\n      am5percent.PieSeries.new(root, {\r\n        name: 'Series',\r\n        categoryField: 'category',\r\n        valueField: 'value',\r\n        //legendLabelText: \"[{fill}]{category}[/]\",\r\n        legendValueText: \"{valuePercentTotal.formatNumber('#.')}% ({value})\",\r\n        radius: am5.percent(45), // outer radius\r\n        innerRadius: am5.percent(20),\r\n        marginBottom: -10,\r\n      }),\r\n    );\r\n    pieSeriesRef.current = pieSeries;\r\n    chart.series.push(pieSeries);\r\n\r\n    // Set slice opacity and stroke color\r\n    pieSeries.slices.template.setAll({\r\n      fillOpacity: 0.9,\r\n      stroke: am5.color('#ffffff'),\r\n      strokeWidth: 1,\r\n      strokeOpacity: 1,\r\n      templateField: 'sliceSettings',\r\n    });\r\n\r\n    // Disabling labels and ticksll\r\n    pieSeries.labels.template.set('visible', false);\r\n    pieSeries.ticks.template.set('visible', false);\r\n\r\n    // EventDispatcher is disposed at SpriteEventDispatcher...\r\n    // It looks like this error results from clicking events\r\n    pieSeries.slices.template.events.on('click', (ev) => {\r\n      const selected: any = ev.target.dataItem?.dataContext;\r\n      const categorySelect: string = selected.category;\r\n      const find = statusStructureChartQuery.find((emp: any) => emp.category === categorySelect);\r\n      const statusSelect = find?.value;\r\n\r\n      var highlightSelect: any;\r\n      var query = structureLayer.createQuery();\r\n\r\n      view.when(function () {\r\n        view.whenLayerView(structureLayer).then((layerView): any => {\r\n          //chartLayerView = layerView;\r\n\r\n          structureLayer.queryFeatures(query).then(function (results) {\r\n            const RESULT_LENGTH = results.features;\r\n            const ROW_N = RESULT_LENGTH.length;\r\n\r\n            let objID = [];\r\n            for (var i = 0; i < ROW_N; i++) {\r\n              var obj = results.features[i].attributes.OBJECTID;\r\n              objID.push(obj);\r\n            }\r\n\r\n            var queryExt = new Query({\r\n              objectIds: objID,\r\n            });\r\n\r\n            structureLayer.queryExtent(queryExt).then(function (result) {\r\n              if (result.extent) {\r\n                view.goTo(result.extent);\r\n              }\r\n            });\r\n\r\n            if (highlightSelect) {\r\n              highlightSelect.remove();\r\n            }\r\n            highlightSelect = layerView.highlight(objID);\r\n\r\n            view.on('click', function () {\r\n              layerView.filter = new FeatureFilter({\r\n                where: undefined,\r\n              });\r\n              highlightSelect.remove();\r\n            });\r\n          }); // End of queryFeatures\r\n\r\n          layerView.filter = new FeatureFilter({\r\n            where: 'BasicPlan = ' + statusSelect,\r\n          });\r\n        }); // End of view.whenLayerView\r\n      }); // End of view.whenv\r\n    });\r\n\r\n    pieSeries.data.setAll(structureData);\r\n\r\n    // Legend\r\n    // https://www.amcharts.com/docs/v5/charts/percent-charts/legend-percent-series/\r\n    var legend = root.container.children.push(\r\n      am5.Legend.new(root, {\r\n        centerX: am5.percent(50),\r\n        x: am5.percent(50),\r\n        y: am5.percent(48),\r\n        layout: root.verticalLayout,\r\n      }),\r\n    );\r\n    legendRef.current = legend;\r\n    legend.data.setAll(pieSeries.dataItems);\r\n\r\n    // Change the size of legend markers\r\n    legend.markers.template.setAll({\r\n      width: 18,\r\n      height: 18,\r\n    });\r\n\r\n    // Change the marker shape\r\n    legend.markerRectangles.template.setAll({\r\n      cornerRadiusTL: 10,\r\n      cornerRadiusTR: 10,\r\n      cornerRadiusBL: 10,\r\n      cornerRadiusBR: 10,\r\n    });\r\n\r\n    // Responsive legend\r\n    // https://www.amcharts.com/docs/v5/tutorials/pie-chart-with-a-legend-with-dynamically-sized-labels/\r\n    // This aligns Legend to Left\r\n    chart.onPrivate('width', function (width: any) {\r\n      const boxWidth = 190; //props.style.width;\r\n      var availableSpace = Math.max(width - chart.height() - boxWidth, boxWidth);\r\n      //var availableSpace = (boxWidth - valueLabelsWidth) * 0.7\r\n      legend.labels.template.setAll({\r\n        width: availableSpace,\r\n        maxWidth: availableSpace,\r\n      });\r\n    });\r\n\r\n    const valueLabelsWidth = 50;\r\n\r\n    // Change legend labelling properties\r\n    // To have responsive font size, do not set font size\r\n    legend.labels.template.setAll({\r\n      oversizedBehavior: 'truncate',\r\n      fill: am5.color('#ffffff'),\r\n      //textDecoration: \"underline\"\r\n      //width: am5.percent(200)\r\n      //fontWeight: \"300\"\r\n    });\r\n\r\n    legend.valueLabels.template.setAll({\r\n      textAlign: 'right',\r\n      width: valueLabelsWidth,\r\n      fill: am5.color('#ffffff'),\r\n      //fontSize: LEGEND_FONT_SIZE,\r\n    });\r\n\r\n    legend.itemContainers.template.setAll({\r\n      // set space between legend items\r\n      paddingTop: 1.1,\r\n      paddingBottom: 2,\r\n    });\r\n\r\n    pieSeries.appear(1000, 100);\r\n\r\n    return () => {\r\n      root.dispose();\r\n    };\r\n  }, [chartID, structureData]);\r\n\r\n  useEffect(() => {\r\n    pieSeriesRef.current?.data.setAll(structureData);\r\n    legendRef.current?.data.setAll(pieSeriesRef.current.dataItems);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"lotNumberImage\">\r\n        <div>\r\n          <div className=\"totalStructuresLabel\">TOTAL STRUCTURES </div>\r\n          <br />\r\n          <br />\r\n          <b className=\"totalLotsNumber\">{thousands_separators(structureNumber)} </b>\r\n        </div>\r\n        <img\r\n          src=\"https://EijiGorilla.github.io/Symbols/House_Logo.svg\"\r\n          alt=\"Structure Logo\"\r\n          height={'19%'}\r\n          width={'19%'}\r\n          style={{ padding: '10px', margin: 'auto' }}\r\n        />\r\n      </div>\r\n      <div style={{ color: 'white', fontSize: '1.1rem', paddingLeft: '20px', marginTop: '15px' }}>\r\n        STRUCTURE BASIC PLAN\r\n      </div>\r\n      <div\r\n        id={chartID}\r\n        style={{\r\n          height: '45vh',\r\n          backgroundColor: 'rgb(0,0,0,0)',\r\n          color: 'white',\r\n          marginBottom: '-1.5vh',\r\n        }}\r\n      ></div>\r\n    </>\r\n  );\r\n}); // End of lotChartgs\r\n\r\nexport default StructureChart;\r\n"],"names":["memo","_ref","municipal","barangay","pieSeriesRef","useRef","legendRef","chartRef","structureData","setStructureData","useState","category","String","value","Number","sliceSettings","fill","am5","chartID","structureNumber","setStructureNumber","queryMunicipality","queryMunicipalBarangay","structureLayer","definitionExpression","useEffect","generateStructureData","then","result","generateStrucNumber","response","_root$_logo","divId","rootElements","root","dom","id","dispose","new","container","children","clear","_logo","setThemes","am5themes_Animated","am5themes_Responsive","chart","push","am5percent","y","layout","horizontalLayout","current","pieSeries","series","name","categoryField","valueField","legendValueText","radius","innerRadius","marginBottom","slices","template","setAll","fillOpacity","stroke","strokeWidth","strokeOpacity","templateField","labels","set","ticks","events","on","ev","_ev$target$dataItem","categorySelect","target","dataItem","dataContext","find","statusStructureChartQuery","emp","statusSelect","highlightSelect","query","createQuery","view","when","whenLayerView","layerView","queryFeatures","results","ROW_N","features","length","objID","i","obj","attributes","OBJECTID","queryExt","Query","objectIds","queryExtent","extent","goTo","remove","highlight","filter","FeatureFilter","where","undefined","data","legend","centerX","x","verticalLayout","dataItems","markers","width","height","markerRectangles","cornerRadiusTL","cornerRadiusTR","cornerRadiusBL","cornerRadiusBR","onPrivate","availableSpace","Math","max","maxWidth","oversizedBehavior","valueLabels","textAlign","itemContainers","paddingTop","paddingBottom","appear","_pieSeriesRef$current","_legendRef$current","_jsxs","_Fragment","className","_jsx","thousands_separators","src","alt","style","padding","margin","color","fontSize","paddingLeft","marginTop","backgroundColor"],"sourceRoot":""}